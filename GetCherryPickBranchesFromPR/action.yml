name: GetCherryPickBranchesFromPR
inputs:
  repo:
    required: true
    type: string
  pr_number:
    required: true
    type: number
  cherry_pick_regex:
    required: true
    type: string
  github_token:
    description: 'GitHub API Access Token.'
    default: ${{ github.token }}
    required: false

outputs:
  branch_count:
    description: "Number of branches"
    value: ${{ steps.getbranches.outputs.branch_count }}
  branches:
    description: "List of branches formatted as a JSON array"
    value: ${{ steps.getbranches.outputs.branches }}

runs:
  using: "composite"
  steps:
    - name: Get cherry-pick branches
      id: getbranches
      shell: bash
      env:
        GITHUB_TOKEN:      ${{inputs.github_token}}
        GH_TOKEN:          ${{inputs.github_token}}
      run: |
        echo "${{env.GITHUB_ACTION}} Get branches"
        branchlist=$(gh api /repos/${{inputs.repo}}/issues/${{inputs.pr_number}}/comments \
          --jq '.[].body | match("${{inputs.cherry_pick_regex}}"; "g") | .captures[0].string' | tr '\n' ' ')
        echo $branchlist
        eval declare -a BRANCHES=( $branchlist )
        declare -p BRANCHES
        branch_count=0
        json="["
        for branch in ${BRANCHES[@]} ; do
          echo "Will cherry-pick to branch $branch"
          [ $branch_count -ne 0 ] && json+=","
          json+="'$branch'"
          branch_count+=1
        done
        json+="]"
        echo "branches=$json" >> "$GITHUB_OUTPUT"
        echo "branch_count=$branch_count" >> "$GITHUB_OUTPUT"
        if [ $branch_count -eq 0 ] ; then
          echo "::notice::No branches needing cherry picks identified"
        else
          echo "::notice::Branches that will have cherry-picks testeds: $json"
        fi
